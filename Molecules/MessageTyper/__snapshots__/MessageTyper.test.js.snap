// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MessageTyper matches the snapshot 1`] = `
<MessageTyper
  className=""
  generalMessage=""
  message=""
  onSend={[MockFunction]}
  style={Object {}}
>
  <div
    className="messagetyper-wrap "
    style={Object {}}
  >
    <DragAndDrop
      allowedExtensions={
        Array [
          "jpg",
          "jpeg",
          "png",
          "pdf",
        ]
      }
      handleDrop={[Function]}
      maxSize={10000000}
      onValidationFailed={[Function]}
    >
      <div>
        <span
          className="messagetyper-hint"
        >
          Press Enter to send
        </span>
        <div
          className="messagetyper"
        >
          <MessageAttachmentButton
            allowedExtensions={
              Array [
                "jpg",
                "jpeg",
                "png",
                "pdf",
              ]
            }
            className="messagetyper-button-attach"
            data-testid="add-attachment-button"
            hiddenInput={
              Object {
                "current": <input
                  id="myInput"
                  style="display: none;"
                  type="file"
                />,
              }
            }
            maxSize={10000000}
            onClick={[Function]}
            onValidationFailed={[Function]}
            style={Object {}}
          >
            <div
              className="messageattachmentbutton messagetyper-button-attach"
              style={Object {}}
            >
              <input
                id="myInput"
                onChange={[Function]}
                style={
                  Object {
                    "display": "none",
                  }
                }
                type="file"
              />
              <button
                className="messageattachmentbutton-button messageattachmentbutton-button-attach"
                data-testid="add-attachment-button"
                onClick={[Function]}
              >
                <IconPlus
                  className=""
                  color="var(--brandcolor_dark)"
                  size={20}
                  style={Object {}}
                >
                  <svg
                    className=""
                    fillRule="evenodd"
                    height={20}
                    style={Object {}}
                    viewBox="0 0 25 25"
                    width={20}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <g
                      fill="var(--brandcolor_dark)"
                    >
                      <path
                        d="M88,593.160714 L88,595.839286 C88,596.575893 87.3973214,597.178571 86.6607143,597.178571 L78.1785714,597.178571 L78.1785714,605.660714 C78.1785714,606.397321 77.5758929,607 76.8392857,607 L74.1607143,607 C73.4241071,607 72.8214286,606.397321 72.8214286,605.660714 L72.8214286,597.178571 L64.3392857,597.178571 C63.6026786,597.178571 63,596.575893 63,595.839286 L63,593.160714 C63,592.424107 63.6026786,591.821429 64.3392857,591.821429 L72.8214286,591.821429 L72.8214286,583.339286 C72.8214286,582.602679 73.4241071,582 74.1607143,582 L76.8392857,582 C77.5758929,582 78.1785714,582.602679 78.1785714,583.339286 L78.1785714,591.821429 L86.6607143,591.821429 C87.3973214,591.821429 88,592.424107 88,593.160714 Z"
                        transform="translate(-63 -582)"
                      />
                    </g>
                  </svg>
                </IconPlus>
              </button>
            </div>
          </MessageAttachmentButton>
          <ForwardRef
            className="messagetyper-input"
            data-testid="send-message-input"
            maxLength={5000}
            onChange={[Function]}
            onKeyPress={[Function]}
            placeholder="Type a new message"
            rows={1}
            style={
              Object {
                "resize": "none",
              }
            }
            value=""
          >
            <TextareaAutosizeClass
              async={false}
              className="messagetyper-input"
              data-testid="send-message-input"
              innerRef={
                Object {
                  "current": <textarea
                    class="messagetyper-input"
                    data-testid="send-message-input"
                    maxlength="5000"
                    placeholder="Type a new message"
                    rows="1"
                    style="resize: none; overflow-x: hidden; word-wrap: break-word; overflow-y: hidden;"
                  />,
                }
              }
              maxLength={5000}
              onChange={[Function]}
              onKeyPress={[Function]}
              placeholder="Type a new message"
              rows={1}
              style={
                Object {
                  "resize": "none",
                }
              }
              value=""
            >
              <textarea
                async={false}
                className="messagetyper-input"
                data-testid="send-message-input"
                maxLength={5000}
                onChange={[Function]}
                onKeyPress={[Function]}
                placeholder="Type a new message"
                rows={1}
                style={
                  Object {
                    "resize": "none",
                  }
                }
                value=""
              />
            </TextareaAutosizeClass>
          </ForwardRef>
          <button
            className="messagetyper-button"
            data-testid="send-message-button"
            onClick={[Function]}
          >
            <IconAirplaneTop
              color="var(--brandcolor_dark)"
              size={20}
            >
              <svg
                fillRule="evenodd"
                height={20}
                style={Object {}}
                viewBox="0 0 24 22"
                width={20}
                xmlns="http://www.w3.org/2000/svg"
              >
                <g
                  fill="var(--brandcolor_dark)"
                >
                  <path
                    d="M0,21.79V13.47c0-.66.39-1.21.86-1.21H24v.05L1.13,22.94C.58,23.2,0,22.62,0,21.79Z"
                    transform="translate(0 -1.06)"
                  />
                  <path
                    d="M0,2.15V9.59a1,1,0,0,0,.86,1.07H24v0L1.13,1.12C.58.89,0,1.41,0,2.15Z"
                    transform="translate(0 -1.06)"
                  />
                </g>
              </svg>
            </IconAirplaneTop>
          </button>
        </div>
      </div>
    </DragAndDrop>
    <SendImageModal
      file={null}
      onClose={[Function]}
      onSend={[Function]}
      show={false}
    >
      <div
        className="sendimagemodal-dimmer-screen"
        data-testid="send-image-modal"
      >
        <div
          className="sendimagemodal-wrap"
        >
          <div
            className="sendimagemodal-header"
          >
            <span
              className="sendimagemodal-text"
            >
              Crop Image
            </span>
            <button
              className="button-reset sendimagemodal-close"
              data-testid="button-close-send-image"
              onClick={[Function]}
            >
              <IconTimes
                color="var(--base__body_fg)"
                size={20}
              >
                <svg
                  height={20}
                  style={Object {}}
                  viewBox="0 0 25 25"
                  width={20}
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M3.492 24.998l-2.197-2.197c-.604-.604-.604-1.593 0-2.197l6.957-6.958L1.295 6.69c-.604-.604-.604-1.593 0-2.197l2.197-2.197c.604-.604 1.593-.604 2.197 0l6.957 6.957 6.958-6.957c.604-.604 1.593-.604 2.197 0l2.197 2.197c.604.604.604 1.593 0 2.197l-6.957 6.957 6.957 6.958c.604.604.604 1.593 0 2.197l-2.197 2.197c-.604.604-1.593.604-2.197 0l-6.958-6.957-6.957 6.957c-.604.604-1.593.604-2.197 0z"
                    fill="var(--base__body_fg)"
                    fillRule="evenodd"
                  />
                </svg>
              </IconTimes>
            </button>
          </div>
          <div
            className="sendimagemodal-content"
          />
          <div
            className="sendimagemodal-footer"
          >
            <Button
              data-testid="send-image"
              disabled={true}
              fluid={true}
              onClick={[Function]}
              style={Object {}}
              type="submit"
            >
              <Button
                as="button"
                className="button-custom"
                data-testid="send-image"
                disabled={true}
                fluid={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseDown={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                style={
                  Object {
                    "backgroundColor": "var(--button_color)",
                    "color": "var(--dark_black)",
                  }
                }
                type="submit"
              >
                <Ref
                  innerRef={
                    Object {
                      "current": <button
                        class="ui fluid disabled button button-custom"
                        data-testid="send-image"
                        disabled=""
                        tabindex="-1"
                        type="submit"
                      >
                        Send
                      </button>,
                    }
                  }
                >
                  <RefFindNode
                    innerRef={
                      Object {
                        "current": <button
                          class="ui fluid disabled button button-custom"
                          data-testid="send-image"
                          disabled=""
                          tabindex="-1"
                          type="submit"
                        >
                          Send
                        </button>,
                      }
                    }
                  >
                    <button
                      className="ui fluid disabled button button-custom"
                      data-testid="send-image"
                      disabled={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      style={
                        Object {
                          "backgroundColor": "var(--button_color)",
                          "color": "var(--dark_black)",
                        }
                      }
                      tabIndex={-1}
                      type="submit"
                    >
                      Send
                    </button>
                  </RefFindNode>
                </Ref>
              </Button>
            </Button>
          </div>
        </div>
      </div>
    </SendImageModal>
  </div>
</MessageTyper>
`;
